# This file gets copied into the Modules/ folder when building
# newlib configurations which do not support dynamic library
# loading.

*static*

array arraymodule.c # array objects
cmath cmathmodule.c _math.c # -lm # complex math library functions
math mathmodule.c _math.c # -lm # math library functions, e.g. sin()
_struct _struct.c   # binary structure packing/unpacking
time timemodule.c # -lm # time operations and variables
operator operator.c # operator.add() and similar goodies

#./Modules/_testcapimodule.c:1381:9: error: use of undeclared identifier 'PyDateTimeAPI'
#    if (PyDateTimeAPI) {
#        ^
#./Modules/_testcapimodule.c:1393:5: error: use of undeclared identifier 'PyDateTime_IMPORT'
#    PyDateTime_IMPORT;
#    ^
#./Modules/_testcapimodule.c:1394:9: error: use of undeclared identifier 'PyDateTimeAPI'
#
#_testcapi _testcapimodule.c    # Python C API test module

_random _randommodule.c # Random number generator
_collections _collectionsmodule.c # Container types

_heapq _heapqmodule.c		# Heapq type

itertools itertoolsmodule.c    # Functions creating iterators for efficient looping
strop stropmodule.c		# String manipulations
_functools _functoolsmodule.c   # Tools for working with functions and callable objects

_elementtree -I$(srcdir)/Modules/expat -DHAVE_EXPAT_CONFIG_H -DUSE_PYEXPAT_CAPI _elementtree.c	# elementtree accelerator
datetime datetimemodule.c	# date/time type

_bisect _bisectmodule.c # Bisection algorithms


_md5 md5module.c md5.c
# The _sha module implements the SHA checksum algorithms.
# (NIST's Secure Hash Algorithms.)
_sha shamodule.c
_sha256 sha256module.c
_sha512 sha512module.c

_json _json.c

binascii binascii.c

future_builtins future_builtins.c

unicodedata unicodedata.c
# Standard I/O baseline
_io -I$(srcdir)/Modules/_io _io/bufferedio.c _io/bytesio.c _io/fileio.c _io/iobase.c _io/_iomodule.c _io/stringio.c _io/textio.c

fcntl fcntlmodule.c	# fcntl(2) and ioctl(2)

_socket socketmodule.c timemodule.c

select selectmodule.c

termios termios.c	# Steen Lumholt's termios module

# cStringIO and cPickle
cStringIO cStringIO.c
cPickle cPickle.c

#readline readline.c

